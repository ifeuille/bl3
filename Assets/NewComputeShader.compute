// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;


Texture2D<float> _DepthTexture;// : register(t0);



groupshared int g3[12][12];
//一个int占4
[numthreads(10,10,1)]
void CSMain (uint3 id : SV_DispatchThreadID,
	int3 vThreadGroupID : SV_GroupID,
	int3 vThreadIDInGroup : SV_GroupThreadID)//10,10,1,线程组ID
{
	g3[vThreadIDInGroup.x][vThreadIDInGroup.y] = _DepthTexture[id.xy].x;//todo测试groupshared的读写偏移计算公式
	GroupMemoryBarrierWithGroupSync ();
	int value = g3[vThreadIDInGroup.x][vThreadIDInGroup.y+1];
	int value2 = g3[vThreadIDInGroup.x][vThreadIDInGroup.y];
	//int value3 = g3[vThreadIDInGroup.x][vThreadIDInGroup.y + 2];
    Result[id.xy] =float4(value, value2, 0,1);
}
