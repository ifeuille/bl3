// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;





groupshared float3 g0[12][4];
groupshared float3 g1[12][4];
groupshared int3 g2[12][4];
groupshared int4 g3[12][3];
groupshared int4 g4[12][6];
//一个int占4
[numthreads(10,10,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
	int2 pixe = id.xy + int2(1,1);// != (0, 0) ? Result[id.xy].xy : 0;
	//pixe = pixe + Result[id.xy];
	g3[pixe.x][pixe.y].x = Result[id.xy].x;//todo测试groupshared的读写偏移计算公式
	GroupMemoryBarrierWithGroupSync ();
	g3[pixe.x][pixe.x].x = Result[id.xy].x;
	int value = g3[id.x][id.y];
    Result[id.xy] =float4(value.x,0,0,1);
}
